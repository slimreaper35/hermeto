apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: on-release
  annotations:
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-target-branch: "[refs/tags/*]"
    pipelinesascode.tekton.dev/task: "[git-clone]"
spec:
  params:
    - name: repo_url
      value: "{{repo_url}}"
    - name: revision
      value: "{{revision}}"
    - name: slack-webhook-notification-team
      value: build
  pipelineSpec:
    tasks:
      - name: fetch-repository
        taskRef:
          params:
            - name: name
              value: git-clone
            - name: bundle
              value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:7939000e2f92fc8b5d2c4ee4ba9000433c5aa7700d2915a1d4763853d5fd1fd4
            - name: kind
              value: task
          resolver: bundles
        workspaces:
          - name: output
            workspace: workspace
        params:
          - name: depth
            value: "0"
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
      - name: release
        runAfter:
          - fetch-repository
        workspaces:
          - name: output
            workspace: workspace
        taskSpec:
          results:
            - name: version
          workspaces:
            - name: output
          steps:
            - name: get-semver-tag
              image: registry.access.redhat.com/ubi9/python-39
              workingDir: $(workspaces.output.path)
              env:
              - name: WORKSPACE_OUTPUT_PATH
                value: $(workspaces.output.path)
              - name: PARAM_REVISION
                value: $(params.revision)
              script: |
                #!/usr/bin/env bash
                set -eufx

                git config --global --add safe.directory "${WORKSPACE_OUTPUT_PATH}"
                git fetch --tag -v
                version=$(git  --no-pager tag --points-at HEAD)
                [[ -z ${version} ]] && {
                    echo "No tag points at commit $PARAM_REVISION"
                    exit 1
                }

                if [[ $version =~ ^([0-9])\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$  ]]; then
                  echo "version: $version"
                else
                  echo "This tag is not proper semantic version form: $version"
                  exit 1
                fi

                echo $version > $(results.version.path)

            - name: push-semver-tag-to-image
              image: registry.access.redhat.com/ubi9/skopeo
              workingDir: $(workspaces.output.path)
              env:
              - name: PARAM_REVISION
                value: $(params.revision)
              script: |
                #!/usr/bin/env bash
                set -eufx

                version=$(cat $(results.version.path))
                skopeo copy docker://quay.io/konflux-ci/hermeto:$PARAM_REVISION \
                  docker://quay.io/konflux-ci/hermeto:$version

    finally:
      - name: slack-webhook-notification
        taskRef:
          resolver: bundles
          params:
            - name: name
              value: slack-webhook-notification
            - name: bundle
              value: quay.io/konflux-ci/tekton-catalog/task-slack-webhook-notification:0.1
            - name: kind
              value: task
        when:
        - input: $(tasks.status)
          operator: in
          values: ["Failed"]
        params:
        - name: message
          value: |-
            Tekton pipelineRun $(context.pipelineRun.name) failed.
            See https://console-openshift-console.apps.stone-prd-rh01.pg1f.p1.openshiftapps.com/k8s/ns/konflux-ci/tekton.dev~v1~PipelineRun/$(context.pipelineRun.name)
            (Quick! It may disappear soon!)
        - name: key-name
          value: $(params.slack-webhook-notification-team)

  workspaces:
    - name: workspace
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
